risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[6 - (j - 1), 2] * numcyclesval[6 - (j + 1),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_hc1[i, j]) ))
prob_h2[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h2[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h1[i, j]
}
}
#min-average
output_minaverage <- matrix(ncol=6, nrow=230)
for (i in 1:230){
dam_cycle$setValues(damage[i:(i + 5),1])
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minaverage[i, j] <- riskval[j, 2]
}
}
output_minmax <- matrix(ncol=6, nrow=230)
d_h1 <- matrix(ncol=6, nrow=230)
y_h1 <- matrix(ncol=6, nrow=230)
prob_h1 <- matrix(ncol=6, nrow=230)
risk_h1 <- matrix(ncol=6, nrow=230)
output_h1 <- matrix(ncol=6, nrow=230)
d_h2 <- matrix(ncol=6, nrow=230)
y_h2 <- matrix(ncol=6, nrow=230)
prob_h2 <- matrix(ncol=6, nrow=230)
risk_h2 <- matrix(ncol=6, nrow=230)
output_h2 <- matrix(ncol=6, nrow=230)
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
numworkersval <- numworkers$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[6 - (j - 1), 2] * numcyclesval[6 - (j + 1),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_hc1[i, j]) ))
prob_h2[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h2[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h1[i, j]
}
}
output_minmax <- matrix(ncol=6, nrow=230)
d_h1 <- matrix(ncol=6, nrow=230)
y_h1 <- matrix(ncol=6, nrow=230)
prob_h1 <- matrix(ncol=6, nrow=230)
risk_h1 <- matrix(ncol=6, nrow=230)
output_h1 <- matrix(ncol=6, nrow=230)
d_h2 <- matrix(ncol=6, nrow=230)
y_h2 <- matrix(ncol=6, nrow=230)
prob_h2 <- matrix(ncol=6, nrow=230)
risk_h2 <- matrix(ncol=6, nrow=230)
output_h2 <- matrix(ncol=6, nrow=230)
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
numworkersval <- numworkers$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
#d_h2[i, j] <- dam_cycleval[6 - (j - 1), 2] * numcyclesval[6 - (j + 1),2]
#y_h2[i, j] <- (1.7229 + (1.0239 * log(d_hc1[i, j]) ))
#prob_h2[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
#risk_h2[i, j] <- prob_h1[i, j] * worcharval[j,2]
#output_h2[i, j] <- risk_h1[i, j]
}
}
output_minmax <- matrix(ncol=6, nrow=230)
d_h1 <- matrix(ncol=6, nrow=230)
y_h1 <- matrix(ncol=6, nrow=230)
prob_h1 <- matrix(ncol=6, nrow=230)
risk_h1 <- matrix(ncol=6, nrow=230)
output_h1 <- matrix(ncol=6, nrow=230)
d_h2 <- matrix(ncol=6, nrow=230)
y_h2 <- matrix(ncol=6, nrow=230)
prob_h2 <- matrix(ncol=6, nrow=230)
risk_h2 <- matrix(ncol=6, nrow=230)
output_h2 <- matrix(ncol=6, nrow=230)
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
numworkersval <- numworkers$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[6 - (j - 1), 2] * numcyclesval[6 - (j + 1),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_hc1[i, j]) ))
prob_h2[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h2[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h1[i, j]
}
}
#min-average
output_minaverage <- matrix(ncol=6, nrow=230)
for (i in 1:230){
dam_cycle$setValues(damage[i:(i + 5),1])
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minaverage[i, j] <- riskval[j, 2]
}
}
output_minmax <- matrix(ncol=6, nrow=230)
d_h1 <- matrix(ncol=6, nrow=230)
y_h1 <- matrix(ncol=6, nrow=230)
prob_h1 <- matrix(ncol=6, nrow=230)
risk_h1 <- matrix(ncol=6, nrow=230)
output_h1 <- matrix(ncol=6, nrow=230)
d_h2 <- matrix(ncol=6, nrow=230)
y_h2 <- matrix(ncol=6, nrow=230)
prob_h2 <- matrix(ncol=6, nrow=230)
risk_h2 <- matrix(ncol=6, nrow=230)
output_h2 <- matrix(ncol=6, nrow=230)
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
#numworkersval <- numworkers$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[6 - (j - 1), 2] * numcyclesval[6 - (j + 1),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_hc1[i, j]) ))
prob_h2[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h2[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h1[i, j]
}
}
#min-average
output_minaverage <- matrix(ncol=6, nrow=230)
for (i in 1:230){
dam_cycle$setValues(damage[i:(i + 5),1])
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minaverage[i, j] <- riskval[j, 2]
}
}
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
numworkersval <- numworkers$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[(6 - (j - 1)), 2] * numcyclesval[(6 - (j + 1)),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_hc1[i, j]) ))
prob_h2[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h2[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h1[i, j]
}
}
#min-average
output_minaverage <- matrix(ncol=6, nrow=230)
for (i in 1:230){
dam_cycle$setValues(damage[i:(i + 5),1])
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minaverage[i, j] <- riskval[j, 2]
}
}
output_minmax <- matrix(ncol=6, nrow=230)
d_h1 <- matrix(ncol=6, nrow=230)
y_h1 <- matrix(ncol=6, nrow=230)
prob_h1 <- matrix(ncol=6, nrow=230)
risk_h1 <- matrix(ncol=6, nrow=230)
output_h1 <- matrix(ncol=6, nrow=230)
d_h2 <- matrix(ncol=6, nrow=230)
y_h2 <- matrix(ncol=6, nrow=230)
prob_h2 <- matrix(ncol=6, nrow=230)
risk_h2 <- matrix(ncol=6, nrow=230)
output_h2 <- matrix(ncol=6, nrow=230)
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
numworkersval <- numworkers$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[(6 - (j - 1)), 2] * numcyclesval[(6 - (j - 1)),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_hc1[i, j]) ))
prob_h2[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h2[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h1[i, j]
}
}
#min-average
output_minaverage <- matrix(ncol=6, nrow=230)
for (i in 1:230){
dam_cycle$setValues(damage[i:(i + 5),1])
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minaverage[i, j] <- riskval[j, 2]
}
}
output_minmax <- matrix(ncol=6, nrow=230)
d_h1 <- matrix(ncol=6, nrow=230)
y_h1 <- matrix(ncol=6, nrow=230)
prob_h1 <- matrix(ncol=6, nrow=230)
risk_h1 <- matrix(ncol=6, nrow=230)
output_h1 <- matrix(ncol=6, nrow=230)
d_h2 <- matrix(ncol=6, nrow=230)
y_h2 <- matrix(ncol=6, nrow=230)
prob_h2 <- matrix(ncol=6, nrow=230)
risk_h2 <- matrix(ncol=6, nrow=230)
output_h2 <- matrix(ncol=6, nrow=230)
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
numworkersval <- numworkers$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[(6 - (j - 1)), 2] * numcyclesval[(6 - (j - 1)),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_h2[i, j]) ))
prob_h2[i, j] <- exp(y_h2[i, j]) / (1 + exp(y_h2[i, j]))
risk_h2[i, j] <- prob_h2[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h2[i, j]
}
}
#min-average
output_minaverage <- matrix(ncol=6, nrow=230)
for (i in 1:230){
dam_cycle$setValues(damage[i:(i + 5),1])
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minaverage[i, j] <- riskval[j, 2]
}
}
View(output_h2)
output_minmax <- matrix(ncol=6, nrow=230)
d_h1 <- matrix(ncol=6, nrow=230)
y_h1 <- matrix(ncol=6, nrow=230)
prob_h1 <- matrix(ncol=6, nrow=230)
risk_h1 <- matrix(ncol=6, nrow=230)
output_h1 <- matrix(ncol=6, nrow=230)
d_h2 <- matrix(ncol=6, nrow=230)
y_h2 <- matrix(ncol=6, nrow=230)
prob_h2 <- matrix(ncol=6, nrow=230)
risk_h2 <- matrix(ncol=6, nrow=230)
output_h2 <- matrix(ncol=6, nrow=230)
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
numworkersval <- numworkers$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[(numworkersval - (j - 1)), 2] * numcyclesval[(numworkersval - (j - 1)),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_h2[i, j]) ))
prob_h2[i, j] <- exp(y_h2[i, j]) / (1 + exp(y_h2[i, j]))
risk_h2[i, j] <- prob_h2[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h2[i, j]
}
}
#Min-max & heuristics
output_minmax <- matrix(ncol=6, nrow=230)
d_h1 <- matrix(ncol=6, nrow=230)
y_h1 <- matrix(ncol=6, nrow=230)
prob_h1 <- matrix(ncol=6, nrow=230)
risk_h1 <- matrix(ncol=6, nrow=230)
output_h1 <- matrix(ncol=6, nrow=230)
d_h2 <- matrix(ncol=6, nrow=230)
y_h2 <- matrix(ncol=6, nrow=230)
prob_h2 <- matrix(ncol=6, nrow=230)
risk_h2 <- matrix(ncol=6, nrow=230)
output_h2 <- matrix(ncol=6, nrow=230)
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
numworkersval <- numworkers$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[(numworkersval[1] - (j - 1)), 2] * numcyclesval[(numworkersval[1] - (j - 1)),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_h2[i, j]) ))
prob_h2[i, j] <- exp(y_h2[i, j]) / (1 + exp(y_h2[i, j]))
risk_h2[i, j] <- prob_h2[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h2[i, j]
}
}
numworkersval <- numworkers$getValues()
w < - numworkersval
w < - numworkersval[1]
numworkersval
w <- numworkersval
w
w[1]
dam_cycle <- ampl$getParameter("dpc")
numcycles <- ampl$getParameter("num_cycles")
worchar <- ampl$getParameter("char")
numworkers <- ampl$getParameter("n")
risk <- ampl$getVariable("Risk")
numworkersval <- numworkers$getValues()
w <- numworkersval[1]
output_minmax <- matrix(ncol=6, nrow=230)
d_h1 <- matrix(ncol=6, nrow=230)
y_h1 <- matrix(ncol=6, nrow=230)
prob_h1 <- matrix(ncol=6, nrow=230)
risk_h1 <- matrix(ncol=6, nrow=230)
output_h1 <- matrix(ncol=6, nrow=230)
d_h2 <- matrix(ncol=6, nrow=230)
y_h2 <- matrix(ncol=6, nrow=230)
prob_h2 <- matrix(ncol=6, nrow=230)
risk_h2 <- matrix(ncol=6, nrow=230)
output_h2 <- matrix(ncol=6, nrow=230)
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[(w - (j - 1)), 2] * numcyclesval[(w - (j - 1)),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_h2[i, j]) ))
prob_h2[i, j] <- exp(y_h2[i, j]) / (1 + exp(y_h2[i, j]))
risk_h2[i, j] <- prob_h2[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h2[i, j]
}
}
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[(6 - (j - 1)), 2] * numcyclesval[(6 - (j - 1)),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_h2[i, j]) ))
prob_h2[i, j] <- exp(y_h2[i, j]) / (1 + exp(y_h2[i, j]))
risk_h2[i, j] <- prob_h2[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h2[i, j]
}
}
View(output_h2)
library(rAMPL)
ampl <- new(AMPL)
#reading LIFFT data
damage <- read.csv(file="LIFFT.csv", header=TRUE, sep=",")
#reading model and data
ampl$read("proposed-model.mod")
ampl$readData("proposed-model.dat")
#solving the model
ampl$solve()
minmax <- ampl$getObjective("Minmax")
dam_cycle <- ampl$getParameter("dpc")
numcycles <- ampl$getParameter("num_cycles")
worchar <- ampl$getParameter("char")
numworkers <- ampl$getParameter("n")
risk <- ampl$getVariable("Risk")
numworkersval <- numworkers$getValues()
w <- numworkersval[1]
#Min-max & heuristics
output_minmax <- matrix(ncol=6, nrow=230)
d_h1 <- matrix(ncol=6, nrow=230)
y_h1 <- matrix(ncol=6, nrow=230)
prob_h1 <- matrix(ncol=6, nrow=230)
risk_h1 <- matrix(ncol=6, nrow=230)
output_h1 <- matrix(ncol=6, nrow=230)
d_h2 <- matrix(ncol=6, nrow=230)
y_h2 <- matrix(ncol=6, nrow=230)
prob_h2 <- matrix(ncol=6, nrow=230)
risk_h2 <- matrix(ncol=6, nrow=230)
output_h2 <- matrix(ncol=6, nrow=230)
for (i in 1:230) {
dam_cycle$setValues(damage[i:(i + 5),1])
dam_cycleval <- dam_cycle$getValues()
numcyclesval <- numcycles$getValues()
worcharval <- worchar$getValues()
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minmax[i, j] <- riskval[j, 2]
d_h1[i, j] <- dam_cycleval[j, 2] * numcyclesval[j,2]
y_h1[i, j] <- (1.7229 + (1.0239 * log(d_h1[i, j]) ))
prob_h1[i, j] <- exp(y_h1[i, j]) / (1 + exp(y_h1[i, j]))
risk_h1[i, j] <- prob_h1[i, j] * worcharval[j,2]
output_h1[i, j] <- risk_h1[i, j]
d_h2[i, j] <- dam_cycleval[(6 - (j - 1)), 2] * numcyclesval[(6 - (j - 1)),2]
y_h2[i, j] <- (1.7229 + (1.0239 * log(d_h2[i, j]) ))
prob_h2[i, j] <- exp(y_h2[i, j]) / (1 + exp(y_h2[i, j]))
risk_h2[i, j] <- prob_h2[i, j] * worcharval[j,2]
output_h2[i, j] <- risk_h2[i, j]
}
}
library(rAMPL)
ampl <- new(AMPL)
#reading LIFFT data
damage <- read.csv(file="LIFFT.csv", header=TRUE, sep=",")
#reading model and data
ampl$read("proposed-model.mod")
ampl$readData("proposed-model.dat")
ampl$solve()
totalrisk <- ampl$getObjective("total_risk"
dam_cycle <- ampl$getParameter("dpc")
numcycles <- ampl$getParameter("num_cycles")
worchar <- ampl$getParameter("char")
numworkers <- ampl$getParameter("n")
risk <- ampl$getVariable("Risk")
numworkersval <- numworkers$getValues()
w <- numworkersval[1]
library(rAMPL)
ampl <- new(AMPL)
damage <- read.csv(file="LIFFT.csv", header=TRUE, sep=",")
ampl$read("proposed-model.mod")
ampl$readData("proposed-model.dat")
ampl$solve()
totalrisk <- ampl$getObjective("total_risk")
dam_cycle <- ampl$getParameter("dpc")
numcycles <- ampl$getParameter("num_cycles")
risk <- ampl$getVariable("Risk")
output_minaverage <- matrix(ncol=6, nrow=230)
for (i in 1:230){
dam_cycle$setValues(damage[i:(i + 5),1])
ampl$solve()
for (j in 1:6) {
riskval <- risk$getValues()
output_minaverage[i, j] <- riskval[j, 2]
}
}
output <- data.frame(output_minmax, output_minaverage, output_h1, output_h2)
write.table(output, file = "Results.csv", sep = ",", row.names=FALSE)
